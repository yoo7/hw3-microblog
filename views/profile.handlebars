{{! Use the main layout }}
{{!< main }}

<section class="profile">
    <div class="profile-container">
        <div class="profile-avatar">
            <!-- Conditional rendering based on variables copied this code from main.handlebars-->
            <img src="{{#if user.avatar_url}}
                            {{user.avatar_url}}
                        {{else}}
                            ../images/{{user.username}}
                        {{/if}}" 
                        alt="User Avatar" 
                        class="header-avatar">
            
        </div>

        <section class="profile-info">
            <p><span class="bold gaegu-class">Username:</span> {{user.username}}</p>
            <p><span class="bold gaegu-class">Member Since:</span> {{user.memberSince}}</p>
        </section>

        
        <section class="user-change">
            {{#ifCond user currentUser}}
            <h2>&mdash; Change Username &mdash;</h2>
            <!-- errors will appear here -->
            {{#if regError}}
                <p style="color: red;">{{regError}}</p>
            {{/if}}
                <form action="/changeUser" method="POST">
                <!-- Following two lines from 5/15 lecture with Dr. Posnett -->
                <label for="new-username">New Name:</label>
                <input type="text" id="new-username" name="username" class="gaegu-regular">
                <button type="submit" class="gaegu-regular">Submit</button>
            </form>
            {{/ifCond}}
        </section>
        

        <section class="bio">
            <h2>&mdash; Bio &mdash;</h2>
            <div id="actual-bio">
                <p>{{user.bio}}</p>
                {{#ifCond user currentUser}}
                    <button type="button" class="gaegu-regular" onclick="editBio()">EDIT</button>
                {{/ifCond}}
            </div>

            <div class="post-form" id="bio-edit">
                <form action="/bio" method="POST">
                    <textarea class="gaegu-regular" id="content" name="content" required=false placeholder="Say something about yourself!">{{user.bio}}</textarea>

                    <div class="form-actions">
                        <button type="button" class="gaegu-regular" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                        <button type="button" class="gaegu-regular" onclick="editBio()">CANCEL</button>
                        <button type="submit" class="gaegu-regular">FINISH</button>
                    </div>
                </form>

                <div id="emoji-container" class="emoji-panel" style="display: none;">
                    <!-- input field for the emoji search -->
                    <input class="gaegu-regular" type="search" id="emoji-search" name="search" placeholder="Search for an emoji" oninput="searchEmojis()"/>

                    <div id="emoji-grid">

                    </div>
                </div>
            </div>
        </section>
    </div>
</section>

<section class="user-posts">
    <!-- you can call posts tweets, or truths, or whatever, these are neologisms. Choose your own new in server.js -->
    {{#ifCond user currentUser}}
        <h2>&mdash; Your {{{postNeoType}}}s &mdash;</h2>
    {{else}}
        <h2>&mdash; {{user.username}}'s {{{postNeoType}}}s &mdash;</h2>
    {{/ifCond}}
    <!-- you'll need to make this conditaionl and #each expression work -->
    {{#if posts.length}}
        <ul>
            {{#each posts}}
                <!-- you have to pass the user in to posts and this is the syntax -->
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <!-- fix this up with some helper functions and other handlebars expressions, or add you own character -->
            <p>You have not posted yet, {{postNeoType}}-Taker!</p>
        {{/if}}
</section>

<script>
    function editBio() {
        const actualBio = document.getElementById("actual-bio");
        console.log(actualBio);
        actualBio.style.display = actualBio.style.display === "none" ? "flex" : "none";

        const form = document.getElementById("bio-edit");
        console.log("form:", form.style.display);
        form.style.display = form.style.display !== "flex" ? "flex" : "none";
    }

    // TODO make a src to emojis.js with belo since same code as in home
    let allEmojis = [];  // Global list to hold all emojis

    function toggleEmojiPanel() {
        const container = document.getElementById("emoji-container");
        container.style.display = container.style.display === "none" ? "block" : "none";

        if (container.style.display === "block" && allEmojis.length === 0) {
            // Fetch emojis, turn the response into JSON, update allEmojis, and display the toggle
            fetch("/emojis")
                .then(response => response.json())
                .then(data => {
                    allEmojis = data;
                    displayEmojis(allEmojis);
                })
                .catch(error => {
                    console.error("Error fetching emojis:", error);
                });
        }
    }

    function displayEmojis(emojis,limit=200) {
        const container = document.getElementById("emoji-grid");
        container.innerHTML = '';  // Clear previous results

        if (Array.isArray(emojis) && emojis.length > 0) {
            emojis.slice(0, limit).forEach(emoji => {
                const emojiElement = document.createElement("span");
                emojiElement.textContent = emoji.character;
                emojiElement.title = emoji.slug;  // Showing the emoji name on hover
                emojiElement.style.cursor = "pointer";
                emojiElement.onclick = () => insertEmoji(emoji.character);
                container.appendChild(emojiElement);
            });
        } else {
            container.textContent = "No emojis found. Try a different search!";
        }
    }

    // Get the emojis whose names contain the substring searchTerm
    function searchEmojis() {
        const searchTerm = document.getElementById("emoji-search").value.toLowerCase();

        // Look through the array of JS objects -- for each object, check the "slug" attribute
        // and see if that string contains the searchTerm
        const filteredEmojis = allEmojis.filter((obj) => obj.slug.includes(searchTerm));
        
        displayEmojis(filteredEmojis);
    }

    // Put emoji on the form
    // Reference: https://stackoverflow.com/a/2345915
    function insertEmoji(emoji) {
        const textarea = document.getElementById("content");

        textarea.focus();  // Keep focus on the textarea

        // Insert the emoji where the user cursor is
        const i = textarea.selectionStart;
        const firstSubstr = textarea.value.substring(0, i);
        const secondSubstr = textarea.value.substring(i);

        textarea.value = firstSubstr + emoji + secondSubstr;

        // Put the user cursor one after the emoji that was just inserted
        // Remember that emojis are not just one ASCII character
        textarea.focus();
        textarea.setSelectionRange(i + emoji.length, i + emoji.length);
    }

    function toggleDropdown() {
        const dropdown = document.getElementById("dropdown");
        const options = document.getElementsByClassName("options")[0];
        options.classList.toggle("visible");
    }
</script>
